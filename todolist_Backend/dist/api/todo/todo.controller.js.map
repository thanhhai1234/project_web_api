{"version":3,"sources":["../../../src/api/todo/todo.controller.js"],"names":["create","req","res","schema","Joi","object","keys","todo_title","string","required","todo_content","todo_priority","todo_completed","boolean","validate","body","value","error","details","status","json","todo","Todo","err","console","send","findAll1","query","page","perPage","option","parseInt","limit","paginate","findAll","trangthai","objQuery","find","findOne","params","id","findById","msg","update","findOneAndUpdate","_id","new","delete","findOneAndRemove"],"mappings":"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","file":"todo.controller.js","sourcesContent":["import  Joi from 'joi'\nimport Todo from './todo.model';\n\nexport default {\n        async create(req, res) {\n            try {\n                const schema = Joi.object().keys({\n                    todo_title: Joi.string().required(),\n                    todo_content: Joi.string().required(),\n                    todo_priority: Joi.string().required(),\n                    todo_completed: Joi.boolean().required(),\n                });\n                const { value, error } = Joi.validate(req.body, schema);\n                if (error && error.details) {\n                    return res.status(400).json(error);\n                }\n                const todo = await Todo.create(value);\n                return res.json(todo);\n            } catch (err) {\n                console.error(err);\n                return res.status(500).send(err);\n            }\n        },\n    async findAll1(req, res) {\n            const {page, perPage }= req.query;\n            const  option = {\n                page : parseInt(page,10) || 1,\n                limit: parseInt(perPage,10) ||10\n\n            };\n        try {\n            const todo = await Todo.paginate({},option);\n            return res.json(todo);\n        } catch (err) {\n            console.error(err);\n            return res.status(500).send(err);\n        }\n    },\n\n    async findAll(req, res) {\n        try {\n            let {trangthai} = req.query\n            // viết api danh sách, có tìm kiếm dữ liệu, theo điều kiện truy vấn.\n\n            // khai báo object filter để đưa vào func find của mongosee\n            let objQuery = {}\n            if(trangthai === '0'){\n                objQuery.todo_completed = false\n            }else if(trangthai === '1'){\n                objQuery.todo_completed = true\n            }\n            const todo = await Todo.find(objQuery);\n            return res.json(todo);\n        } catch (err) {\n            console.error(err);\n            return res.status(500).send(err);\n        }\n    },\n\n    async findOne(req , res){\n            try {\n                const {id}= await req.params;\n                const todo = await Todo.findById(id);\n                if (!todo){\n                    return res.json({msg:' Không có công việc'});\n                }\n                return res.json(todo);\n            } catch (err) {\n                console.error(err);\n                return res.status(500).send(err);\n            }\n\n\n    },\n    async update(req , res){\n            const  {id} = await  req.params;\n            const schema = Joi.object().keys({\n                todo_title: Joi.string().required(),\n                todo_content: Joi.string().required(),\n                todo_priority: Joi.string().required(),\n                todo_completed: Joi.boolean().required(),\n\n            });\n            const { value, error } = Joi.validate(req.body, schema);\n            if (error && error.details) {\n                return res.status(400).json(error);\n            }\n            const todo = await Todo.findOneAndUpdate({ _id: id }, value, { new: true });\n            return res.json(todo);\n\n    },\n    async delete(req, res) {\n        try {\n            const { id } = req.params;\n            const todo = await Todo.findOneAndRemove({ _id: id });\n            if (!todo) {\n                return res.status(404).json({ err: 'could not find todo' });\n            }\n            return res.json(todo);\n        } catch (err) {\n            console.error(err);\n            return res.status(500).send(err);\n        }\n    },\n\n};"]}